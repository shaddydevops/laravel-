openapi: 3.0.3
info:
  title: CLMS
  description: 'Action Aid Malawi - Community Led monitoring system. '
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/analytics:
    get:
      summary: ''
      operationId: getApiAnalytics
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Analytics
      security: []
  /api/analytics/dashboard:
    get:
      summary: ''
      operationId: getApiAnalyticsDashboard
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Analytics
      security: []
  /api/analytics/forms:
    get:
      summary: ''
      operationId: getApiAnalyticsForms
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Analytics
      security: []
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Authenticates with the DB and returns the user, token and roles'
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: 'l}G{-H^qNy%+>Xmq'
                  nullable: false
              required:
                - username
                - password
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: 'Destroys the session and invalidates the token'
      parameters: []
      responses: {  }
      tags:
        - Authentication
  /api/password/forgot:
    post:
      summary: 'Initiate Password Reset'
      operationId: initiatePasswordReset
      description: 'Initiates a password reset email'
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: patsy47@example.com
                  nullable: false
              required:
                - email
      security: []
  /api/password/reset:
    post:
      summary: Reset
      operationId: reset
      description: "Resets the user's password"
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: enim
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: letha.kuvalis@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: s>m|DS
                  nullable: false
              required:
                - token
                - email
                - password
      security: []
  '/api/users/{user_id}/change-password':
    patch:
      summary: 'Reset Password'
      operationId: resetPassword
      description: 'Resets the user password to the given password'
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: "OM%AL}<S}-O>'"
                  nullable: false
              required:
                - password
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 9d627bf3-e581-4dd1-b8ab-f78fb42b971a
        required: true
        schema:
          type: string
  /api/config/regions:
    get:
      summary: 'Get Regions'
      operationId: getRegions
      description: 'Returns registered regions'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Config
  /api/config/districts:
    get:
      summary: 'Get Districts'
      operationId: getDistricts
      description: 'Returns configured districts'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Config
  /api/config/partners:
    get:
      summary: Partners
      operationId: partners
      description: 'Returns configured partners'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Config
  /api/config/roles:
    get:
      summary: Roles
      operationId: roles
      description: 'Returns a list of all configured roles'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Config
      security: []
  /api/health:
    get:
      summary: ''
      operationId: getApiHealth
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: ok
                properties:
                  status:
                    type: string
                    example: ok
      tags:
        - Endpoints
      security: []
  '/api/issues/{issue_id}/report':
    get:
      summary: ''
      operationId: getApiIssuesIssue_idReport
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: issue_id
        description: 'The ID of the issue.'
        example: e7ae46de-8879-4b37-8b3d-fc2de8dc9b24
        required: true
        schema:
          type: string
  /api/issues/upload:
    post:
      summary: ''
      operationId: postApiIssuesUpload
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: false
              required:
                - file
      security: []
  /api/issues:
    get:
      summary: ''
      operationId: getApiIssues
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/issues/{id}':
    get:
      summary: ''
      operationId: getApiIssuesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiIssuesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the issue.'
        example: e7ae46de-8879-4b37-8b3d-fc2de8dc9b24
        required: true
        schema:
          type: string
  '/api/issues/{issue_id}/strategies':
    get:
      summary: ''
      operationId: getApiIssuesIssue_idStrategies
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: issue_id
        description: 'The ID of the issue.'
        example: e7ae46de-8879-4b37-8b3d-fc2de8dc9b24
        required: true
        schema:
          type: string
  '/api/strategies/{strategy}/status-history':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: 838775aa-1c87-3374-bc20-aba691a01a2f
                  nullable: true
                strategy_id:
                  type: string
                  description: 'Must be a valid UUID.  The <code>id</code> of an existing record in the strategies table.'
                  example: 847e1cbc-4686-3b17-a15b-cae5195b7c37
                  nullable: false
                status_id:
                  type: string
                  description: 'Must be a valid UUID.  The <code>id</code> of an existing record in the strategies_status table.'
                  example: e8d397e0-313b-3e44-8270-afd56d44909c
                  nullable: false
                updated_by:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: k
                  nullable: false
              required:
                - strategy_id
                - status_id
                - updated_by
      security: []
    parameters:
      -
        in: path
        name: strategy
        description: 'The strategy.'
        example: 1b1601df-48eb-4d27-b856-67350861ada8
        required: true
        schema:
          type: string
  /api/comments:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: 'Must not be greater than 65535 characters.'
                  example: duusnygraelbemm
                  nullable: false
                strategy_id:
                  type: string
                  description: 'Must be a valid UUID.  The <code>id</code> of an existing record in the strategies table.'
                  example: 6970bba0-4ef7-37c2-b33f-883617f10328
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: delayed
                  nullable: false
                  enum:
                    - pending
                    - in_progress
                    - completed
                    - delayed
                    - dropped
                attachment:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
              required:
                - comment
                - strategy_id
                - status
      security: []
  '/api/comments/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: 'Must not be greater than 65535 characters.'
                  example: zl
                  nullable: true
                strategy_id:
                  type: string
                  description: 'Must be a valid UUID.  The <code>id</code> of an existing record in the strategies table.'
                  example: 46336926-489f-32cd-8faa-0c36108c3a63
                  nullable: true
                status:
                  type: string
                  description: ''
                  example: completed
                  nullable: true
                  enum:
                    - pending
                    - in_progress
                    - completed
                    - delayed
                    - dropped
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 226172f0-7fe7-4bda-944e-b1c3cf9351b6
        required: true
        schema:
          type: string
  /api/activities:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gnpovogbosirwolicwzwucpd
                  nullable: false
                responsible:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: grgbqqzdijtkrpjgmmlmzcc
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: in_progress
                  nullable: false
                  enum:
                    - pending
                    - in_progress
                    - completed
                    - cancelled
                description:
                  type: string
                  description: ''
                  example: 'Est aut veritatis ullam eos omnis et.'
                  nullable: true
                category:
                  type: string
                  description: ''
                  example: engagement
                  nullable: false
                  enum:
                    - education
                    - engagement
                    - advocacy
                activity_note:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                strategy_id:
                  type: string
                  description: 'Must be a valid UUID.  The <code>id</code> of an existing record in the strategies table.'
                  example: 56041741-28dc-3acd-96aa-1a6b1d19bf0b
                  nullable: false
              required:
                - activity_name
                - responsible
                - status
                - category
                - strategy_id
      security: []
  '/api/activities/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cuneyyaubhvpjbpljqm
                  nullable: false
                responsible:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zvbrjugliylfzdulmcmlzx
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: pending
                  nullable: false
                  enum:
                    - pending
                    - in_progress
                    - completed
                    - cancelled
                description:
                  type: string
                  description: ''
                  example: 'Qui vel et aut vel autem.'
                  nullable: true
                category:
                  type: string
                  description: ''
                  example: advocacy
                  nullable: false
                  enum:
                    - education
                    - engagement
                    - advocacy
                activity_note:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
                strategy_id:
                  type: string
                  description: 'Must be a valid UUID.  The <code>id</code> of an existing record in the strategies table.'
                  example: fa90ccf1-7f74-3aef-ad19-1079d98a170e
                  nullable: false
              required:
                - activity_name
                - responsible
                - status
                - category
                - strategy_id
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the activity.'
        example: 9f13d7be-4180-40f0-b6ca-a4ce35440986
        required: true
        schema:
          type: string
  /api/facilities:
    get:
      summary: List
      operationId: list
      description: 'Returns a list of all facilities in the system'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Facilities
    post:
      summary: Store
      operationId: store
      description: 'Registers a new facility'
      parameters: []
      responses: {  }
      tags:
        - Facilities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: perspiciatis
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Et perspiciatis perspiciatis cupiditate odio recusandae dolores impedit.'
                  nullable: false
                district_id:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
              required:
                - name
                - description
                - district_id
      security: []
  '/api/facilities/{id}':
    get:
      summary: Show
      operationId: show
      description: 'Returns full details for a facility'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Facilities
    put:
      summary: Update
      operationId: update
      description: 'Updates the facility record'
      parameters: []
      responses: {  }
      tags:
        - Facilities
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Suscipit assumenda aliquam enim officia error.'
                  nullable: true
                district_id:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    delete:
      summary: Delete
      operationId: delete
      description: 'Removes the facility'
      parameters: []
      responses: {  }
      tags:
        - Facilities
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the facility.'
        example: a28997c4-b4fa-42e4-8c89-8ad3dba011cc
        required: true
        schema:
          type: string
  /api/collection-sessions/pending:
    get:
      summary: 'Get Pending'
      operationId: getPending
      description: 'Returns all collection session that are pending'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Forms
  /api/collection-sessions/for-user:
    get:
      summary: 'Forms By User'
      operationId: formsByUser
      description: 'Returns all collection sessions for the user'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Forms
  /api/forms:
    get:
      summary: List
      operationId: list
      description: 'returns a list of all forms in the system'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Forms
  '/api/forms/{form_id}/download':
    post:
      summary: 'Download Data'
      operationId: downloadData
      description: 'Downloads data for the given form.'
      parameters: []
      responses: {  }
      tags:
        - Forms
      security: []
    parameters:
      -
        in: path
        name: form_id
        description: 'The ID of the form.'
        example: 712b2fdb-1444-4dfb-bb69-d071e8310cac
        required: true
        schema:
          type: string
  '/api/forms/{form_id}':
    get:
      summary: Show
      operationId: show
      description: 'Returns full details for a particular form'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Forms
    parameters:
      -
        in: path
        name: form_id
        description: 'The ID of the form.'
        example: 712b2fdb-1444-4dfb-bb69-d071e8310cac
        required: true
        schema:
          type: string
  '/api/forms/{form_id}/collection-sessions':
    get:
      summary: 'Get all data collection sessions for a form'
      operationId: getAllDataCollectionSessionsForAForm
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Forms
      security: []
    parameters:
      -
        in: path
        name: form_id
        description: 'The ID of the form.'
        example: 712b2fdb-1444-4dfb-bb69-d071e8310cac
        required: true
        schema:
          type: string
  /api/collection-sessions:
    get:
      summary: Sessions
      operationId: sessions
      description: 'Returns all data collection sessions'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Forms
      security: []
    post:
      summary: Submit
      operationId: submit
      description: 'Receives and process responses to a form'
      parameters: []
      responses: {  }
      tags:
        - Forms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the forms table.'
                  example: asperiores
                  nullable: false
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: quibusdam
                  nullable: false
                facility_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the facilities table.'
                  example: magni
                  nullable: false
                responses:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["tempore","asperiores"]'
                  nullable: false
              required:
                - form_id
                - user_id
                - facility_id
                - responses
  '/api/collection-sessions/{collection_session_id}':
    get:
      summary: 'Get All'
      operationId: getAll
      description: 'Returns all collection sessions.'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Forms
    post:
      summary: Resubmit
      operationId: resubmit
      description: 'Added functionality for resubmitting form session data'
      parameters: []
      responses: {  }
      tags:
        - Forms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                responses:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["doloribus","nemo"]'
                  nullable: false
              required:
                - responses
      security: []
    parameters:
      -
        in: path
        name: collection_session_id
        description: 'The ID of the collection session.'
        example: 11dd089a-5cc4-466f-a828-6c616837e047
        required: true
        schema:
          type: string
  '/api/collection-sessions/{collection_session_id}/review':
    post:
      summary: Review
      operationId: review
      description: 'Allows users to submit a review for a collection session'
      parameters: []
      responses: {  }
      tags:
        - Forms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: pending
                  nullable: false
                  enum:
                    - pending
                    - approved
                    - rejected
                    - revise
                comment:
                  type: string
                  description: 'This field is required when <code>status</code> is <code>revise</code>.'
                  example: aut
                  nullable: false
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: collection_session_id
        description: 'The ID of the collection session.'
        example: 11dd089a-5cc4-466f-a828-6c616837e047
        required: true
        schema:
          type: string
  '/api/facilities/{facility_id}/collection-sessions/{form_id}':
    get:
      summary: 'Facility Data'
      operationId: facilityData
      description: 'Returns form data for a specific facility'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Forms
      security: []
    parameters:
      -
        in: path
        name: facility_id
        description: 'The ID of the facility.'
        example: a28997c4-b4fa-42e4-8c89-8ad3dba011cc
        required: true
        schema:
          type: string
      -
        in: path
        name: form_id
        description: 'The ID of the form.'
        example: 11dd089a-5cc4-466f-a828-6c616837e047
        required: true
        schema:
          type: string
  /api/strategies/for-user:
    get:
      summary: 'Get For User'
      operationId: getForUser
      description: 'Returns all strategic actions the user is supposed to see'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Strategies
  /api/strategies:
    get:
      summary: List
      operationId: list
      description: 'Returns a list of all strategies in the system'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Strategies
    post:
      summary: Store
      operationId: store
      description: 'Registers a new strategy'
      parameters: []
      responses: {  }
      tags:
        - Strategies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sonswzopqdncpuisdlord
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Voluptatem earum autem atque omnis libero dolor.'
                  nullable: true
                responsible:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vwxbjhcfdvhehpnkpesat
                  nullable: false
                level:
                  type: string
                  description: ''
                  example: facility
                  nullable: false
                  enum:
                    - community
                    - facility
                    - district
                    - national
                deadline:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>today</code>.'
                  example: '2043-03-28'
                  nullable: true
                budget:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 12
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: delayed
                  nullable: false
                  enum:
                    - pending
                    - in_progress
                    - completed
                    - delayed
                    - dropped
                objective:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: uyswltcojactoqwxpopj
                  nullable: false
                issue_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the issues table.'
                  example: eum
                  nullable: false
              required:
                - name
                - responsible
                - level
                - budget
                - status
                - objective
                - issue_id
      security: []
  '/api/strategies/{id}':
    get:
      summary: Show
      operationId: show
      description: 'Returns full details for a strategy'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Strategies
    put:
      summary: Update
      operationId: update
      description: 'Updates the strategy record'
      parameters: []
      responses: {  }
      tags:
        - Strategies
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: usgcrfn
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Sint officia iste eveniet recusandae.'
                  nullable: true
                responsible:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zhwzktq
                  nullable: true
                level:
                  type: string
                  description: ''
                  example: district
                  nullable: true
                  enum:
                    - community
                    - facility
                    - district
                    - national
                deadline:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>today</code>.'
                  example: '2116-06-27'
                  nullable: true
                budget:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 31
                  nullable: true
                status:
                  type: string
                  description: ''
                  example: in_progress
                  nullable: true
                  enum:
                    - pending
                    - in_progress
                    - completed
                    - delayed
                    - dropped
                objective:
                  type: string
                  description: ''
                  example: eveniet
                  nullable: true
                created_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-12-03T19:42:55'
                  nullable: true
                updated_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-12-03T19:42:55'
                  nullable: true
    delete:
      summary: Delete
      operationId: delete
      description: 'Removes the specified strategy'
      parameters: []
      responses: {  }
      tags:
        - Strategies
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the strategy.'
        example: 1b1601df-48eb-4d27-b856-67350861ada8
        required: true
        schema:
          type: string
  '/api/strategies/{strategy}/strategies-history':
    get:
      summary: ''
      operationId: getApiStrategiesStrategyStrategiesHistory
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Strategies
      security: []
    parameters:
      -
        in: path
        name: strategy
        description: 'The strategy.'
        example: 1b1601df-48eb-4d27-b856-67350861ada8
        required: true
        schema:
          type: string
  '/api/strategies/{strategy_id}/comments':
    get:
      summary: ''
      operationId: getApiStrategiesStrategy_idComments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Strategies
      security: []
    parameters:
      -
        in: path
        name: strategy_id
        description: 'The ID of the strategy.'
        example: 1b1601df-48eb-4d27-b856-67350861ada8
        required: true
        schema:
          type: string
  '/api/strategies/{strategy_id}/activities':
    get:
      summary: ''
      operationId: getApiStrategiesStrategy_idActivities
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Strategies
      security: []
    parameters:
      -
        in: path
        name: strategy_id
        description: 'The ID of the strategy.'
        example: 1b1601df-48eb-4d27-b856-67350861ada8
        required: true
        schema:
          type: string
  '/api/users/{user_id}':
    patch:
      summary: Update
      operationId: update
      description: 'Updates the user record'
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: brflgdzwekvytcccmav
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: steuber.mercedes@example.net
                  nullable: true
                first_name:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: snjwedrenroruxlzetilg
                  nullable: true
                last_name:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: nktaclrbvivhfmyyme
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: facvkrevdtgn
                  nullable: true
                role:
                  type: string
                  description: 'This field is required when <code>facility_id</code>, <code>district_id</code>, or <code>partner_id</code> is present.'
                  example: null
                  nullable: true
                facility_id:
                  type: string
                  description: 'This field is required when <code>role</code> is <code>data collector</code> or <code>facility staff</code>.  The <code>id</code> of an existing record in the facilities table.'
                  example: est
                  nullable: false
                district_id:
                  type: number
                  description: 'This field is required when <code>role</code> is <code>clma</code>.  The <code>id</code> of an existing record in the districts table.'
                  example: 301252.57831
                  nullable: false
                partner_id:
                  type: string
                  description: 'This field is required when <code>role</code> is <code>partner</code>.  The <code>id</code> of an existing record in the partners table.'
                  example: est
                  nullable: false
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 9d627bf3-e581-4dd1-b8ab-f78fb42b971a
        required: true
        schema:
          type: string
  /api/admin/users:
    get:
      summary: Get
      operationId: get
      description: 'Returns a list of all user accounts in the system.'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
    post:
      summary: Store
      operationId: store
      description: 'Registers a new user account'
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: gwwteda
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: john.balistreri@example.org
                  nullable: true
                first_name:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: fsrmkvb
                  nullable: false
                last_name:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: kdmkyg
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: tbeelldpwhitu
                  nullable: false
                role:
                  type: string
                  description: 'The <code>name</code> of an existing record in the roles table.'
                  example: modi
                  nullable: false
                facility_id:
                  type: string
                  description: 'This field is required when <code>role</code> is <code>data collector</code>, <code>fic</code>, or <code>hfmo</code>.  The <code>id</code> of an existing record in the facilities table.'
                  example: asperiores
                  nullable: false
                district_id:
                  type: number
                  description: 'This field is required when <code>role</code> is <code>clma</code>, <code>dfp</code>, or <code>dhmis officer</code>.  The <code>id</code> of an existing record in the districts table.'
                  example: 126.8
                  nullable: false
                partner_id:
                  type: string
                  description: 'This field is required when <code>role</code> is <code>ssr</code>.  The <code>id</code> of an existing record in the partners table.'
                  example: temporibus
                  nullable: false
              required:
                - username
                - first_name
                - last_name
                - phone
                - role
  '/api/admin/users/{id}':
    get:
      summary: Show
      operationId: show
      description: 'Returns full details for a user'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
    put:
      summary: Update
      operationId: update
      description: 'Updates the user record'
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: diokvv
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: rowena35@example.net
                  nullable: true
                first_name:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: vbrxelyec
                  nullable: true
                last_name:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: arfzncbqxsvijrwnybmo
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: sdkofjlziduhlhnuk
                  nullable: true
                role:
                  type: string
                  description: 'This field is required when <code>facility_id</code>, <code>district_id</code>, or <code>partner_id</code> is present.'
                  example: null
                  nullable: true
                facility_id:
                  type: string
                  description: 'This field is required when <code>role</code> is <code>data collector</code> or <code>facility staff</code>.  The <code>id</code> of an existing record in the facilities table.'
                  example: culpa
                  nullable: false
                district_id:
                  type: number
                  description: 'This field is required when <code>role</code> is <code>clma</code>.  The <code>id</code> of an existing record in the districts table.'
                  example: 86.843
                  nullable: false
                partner_id:
                  type: string
                  description: 'This field is required when <code>role</code> is <code>partner</code>.  The <code>id</code> of an existing record in the partners table.'
                  example: delectus
                  nullable: false
    delete:
      summary: Delete
      operationId: delete
      description: 'Removes the user from system'
      parameters: []
      responses: {  }
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 9d627bf3-e581-4dd1-b8ab-f78fb42b971a
        required: true
        schema:
          type: string
tags:
  -
    name: Analytics
    description: "\nEndpoints for analytics"
  -
    name: Authentication
    description: ''
  -
    name: Config
    description: "\nEndpoints for fetching configuration data"
  -
    name: Endpoints
    description: ''
  -
    name: Facilities
    description: "\nEndpoints for managing facilities"
  -
    name: Forms
    description: "\nEndpoints for managing forms"
  -
    name: Strategies
    description: "\nEndpoints for managing strategies"
  -
    name: Users
    description: "\nAPI routes for managing user accounts"
